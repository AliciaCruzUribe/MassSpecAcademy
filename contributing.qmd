---
title: Contributing to Mass Spec Academy
author: Noah McLean
date: May 1, 2025
editor:
  render-on-save: true
---

You can contribute to Mass Spec Academy by writing new material or editing existing content. The best way to do this and see how your new content will look is to use the Quarto publishing system and download and submit content through our GitHub repository.

## Overview

We are using [Quarto](https://quarto.org/) to render our instructional materials as user-friendly web and pdf documents. It's free and open source, and it's designed for open science projects like ours. Quarto lets you use all the components of a traditional academic manuscript or textbook, like text organized into chapters and sections, figures and tables with captions, equations with numbers, and references to cited work and to all those chapters/sections/equations/figures. 

But wait, there's more: you can add movies, links to content from other chapters, code that drives computations and visualizations, callout blocks (like the topical side-boxes you see in textbooks, but with more options), and much else. Quarto renders this content both as a nice-looking webpage with lots of navigational features, and as a pdf file. 

You can find nice examples of Quarto-authored books here:

- [R for Data Science (2e)](https://r4ds.hadley.nz/)
- [Geocomputation with Python](https://py.geocompx.org/03-spatial-operations)
- [Causal Inference in R](https://www.r-causal.org/)

## Software Installation

To author new or edit existing content on your computer, you'll need to install some software. This tutorial will help you get set up --- please skip installs for any software you already have.  You will need:

1. Conda to organize and manage our code tools
1. VSCode to write content
1. The Quarto Command Line Interface (CLI)
    * and the Quarto VS Code extension
1. GitHub Desktop as a user-friendly interface with GitHub (optional)

### Step 1: (Mini)conda

We'll use conda to keep track of all the smaller software packages that get used to create our source material. If you have already downloaded Anaconda for some previous data/science work, then great, you're all set! If not, you can download a smaller version without all the extra tools we won't use, called Miniconda. 

This is the most involved install, so we're doing it first. The others are easy. Go to [https://www.anaconda.com/download/success](https://www.anaconda.com/download/success), scroll down past the Anaconda installers, and choose the Miniconda installer for your operating system. There is a Python version next to this, but don't worry about it, there's no Python involved here.  If you're still reading this text, you probably want the "Graphical Installer" option. Note that *DO NOT* need to send your email address to anaconda.com to download or use this. 

::: {.callout-note appearance="simple"}
## Screenshot of anaconda.com/download/success

![Minconda downloads screenshot](figs/tutorials/Miniconda%20downloads%20screenshot.png){width=50%}\

:::

More detailed instructions for Miniconda installation are [here for each OS](https://www.anaconda.com/docs/getting-started/miniconda/install) under "Basic install instructions." In short, the instructions are to choose an install path with no spaces (the default is a good idea). 

For **Windows**, you'll also want to 

- install for "Just Me" instead of "All Users,"  
- create shortcuts (selected by default) for Anaconda Prompt packages, and 
- do [not]{.underline} "Add Miniconda3 to my PATH variable" 

That wasn't so bad, right? 

### Step 2: VS Code

You can use any editor you want for Quarto, but this tutorial will show you how to set up Microsoft Visual Studio (VS) Code. It's free, "built from open source," and it's widely used.

You can consider yourself a hacker once you download VS Code from [https://code.visualstudio.com/download](https://code.visualstudio.com/download). If you don't know which of the buttons to choose for your operating system, then click on the big button.  VS Code is smallish (< 200 MB download, < 500 MB disk space).

::: {.callout-note appearance="simple"}
## Screenshot of code.visualstudio.com/download

![VS Code downloads screenshot](figs/tutorials/VSCode%20download%20screenshot.png){width=50%}\

:::

Install VSCode and follow the prompts. We'll add extensions and additional components later. 

### Step 3: Quarto CLI

Download the Quarto Command Line Interface (CLI) from [https://quarto.org/docs/get-started/](https://quarto.org/docs/get-started/) for your operating system. Install and follow the installer instructions. This is another small-ish ~200 MB installer.  To update Quarto when a new version is released, you'll need to download the new installer from this website and install it again.

::: {.callout-note appearance="simple"}
## Screenshot of quarto.org/docs/get-started/

![Quarto downloads screenshot](figs/tutorials/Quarto%20CLI%20downloads%20screenshot.png){width=50%}\

:::

Quarto is what will turn the text we write in VS Code into content that looks pretty on the web, both on desktops and on mobile screens, and a pdf.

#### Step 3A: Add the Quarto VS Code Extension

Open VS Code and then find the Extensions button on the left sidebar. It looks like some squares with the NE square levitating. 

::: {.callout-note appearance="simple"}
## Screenshot of quarto.org/docs/get-started/

![VS Code Extensions Button](figs/tutorials/VS%20Code%20Extensions%20Button%20Screenshot.png){width=50%}\

:::

Then, click inside the Search bar and type "Quarto."

::: {.callout-note appearance="simple"}
## Screenshot of quarto.org/docs/get-started/

![VS Code Search Extensions screenshot](figs/tutorials/VS%20Code%20Search%20Extensions%20Screenshot.png){width=50%}\

:::

You'll see the Quarto extension up first. Click on the extension to open an information window, then click the Install button on this window.  You'll need the Quarto CLI installed in order to make the VS Code extension work.

The Quarto extension lets VS Code recognize your Quarto-formatted files, then makes it easier to edit those files. It colors your text based on its purpose (headers, links, images, code), lets you drag and drop image files into documents, and provides a preview of your work with the click of a button.  

### Step 4: GitHub Desktop

We will use the version control software Git, and we will host all of our content, like writing and figures, on [GitHub.com](https://github.com/EARTHTIME/MassSpecAcademy). All current and previous versions of content on GitHub are publicly available through the GitHub.com website. Additionally, GitHub serves the [website version of our project](https://massspec.academy/), for free, through [GitHub Pages](https://pages.github.com/). Changes to the project that are pushed up to GitHub repository are automatically rendered to the website. If this makes no sense now, don't worry.

The easiest way to download and install Git and to start working with our GitHub repository is to download the GitHub Desktop app from [https://desktop.github.com/download/](https://desktop.github.com/download/). GitHub knows what operating system you're using, and probably what you ate for lunch last Wednesday, so just click the button to download.

::: {.callout-note appearance="simple"}
## Screenshot of desktop.github.com/download

![GitHub Desktop downloads screenshot](figs/tutorials/GitHub%20Deskdtop%20downloads%20screenshot.png){width=60%}\

:::

You will need to sign in with a GitHub.com username and password. Create one if you don't already --- sorry, this is the only new login you'll need for this project. 

## Getting started

Now that you've installed all the software you need, we will download the current version of the project onto your computer using GitHub Desktop, install the packages it depends on using conda, and then open it for editing in VS Code.

### 1. Fork the MassSpecAcademy GitHub repository

Sign in to GitHub.com with your username and password, then navigate to [https://github.com/EARTHTIME/MassSpecAcademy](https://github.com/EARTHTIME/MassSpecAcademy). Find and click the 'Fork' button at the top right of the screen.

::: {.callout-note appearance="simple"}
## Screenshot of github.com/EARTHTIME/MassSpecAcademy

![GitHub screenshot with fork button highlighted](figs/tutorials/GitHub%20fork%20button%20screenshot.png){width=60%}\

:::

Press the Green "Create Fork" button at the bottom left of the next screen to create your own copy of the MassSpecAcademy repository on your own GitHub account. Now open the GitHub Desktop App, click the sign in with your GitHub username and password, and then from the "File" menu, choose "Clone Repository..."

In the window that pops up, find your new personal copy of the MassSpecAcademy repository in the list of repositories from GitHub.com. This repository will be a single folder with all the files and subfolders of Mass Spec Academy inside it. Choose a Local Path for this folder (the default is usually good), then click the blue Clone button.  

Next, a window from GitHub Desktop will pop up and ask you how you want to use the repository. You want to contribute to the parent project, so keep the radio button in its top position and hit Continue.

::: {.callout-note appearance="simple"}
## Screenshot of popup: how do you want to use this repository?

![GitHub Desktop fork popup](figs/tutorials/GitHub%20Desktop%20fork%20popup%20screenshot.png){width=40%}\

:::

You now have a copy of Mass Spec Academy on your own computer that you can edit!

### 2. Use conda to download dependencies

In order to reproduce the Mass Spec Academy website and run all of its code blocks, like the ones planned for its data and statistics chapters, you'll need to install Python and some packages. This is easy with conda. 

On a [Mac]{.underline}, navigate in Finder to your new MassSpecAcademy folder that contains our local git repository. Then right-click on the MassSpecAcademy folder and, down the list of options, choose "New Terminal At Folder".  

On [Windows]{.underline}, navigate in Windows Explorer to the MassSpecAcademy folder you created with GitHub Desktop. Copy the folder location from the address bar at the top of Windows Explorer. Now open the Anaconda Command Prompt application that was created when you installed Miniconda -- it should be listed beside all your other applications, available from your Windows button.  Type `cd "` (that is the letter `cd`, a space, then a double quotes), then paste in the path you copied, then type a second `"` to close the quotes. Hit enter.

On [Windows]{.underline} or a [Mac]{.underline}, you should now see a blinking cursor to the right of some text that ends with `MassSpecAcademy`, the name of your current folder.  Copy and paste the this text at that blinking cursor, then hit enter.

```bash
conda env create --prefix env -f environment.yml
```

When you hit enter, conda will think some, propose some changes, and then ask if 